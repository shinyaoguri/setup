
- hosts: localhost
  connection: local
  vars:
    homebrew_taps:
      - homebrew/cask
    homebrew_packages:
      - name: git
      - name: vim
      - name: wget
      - name: fish
      - name: tree
      - name: pipenv
      - name: imagemagick
      - name: anyenv
      - name: trash
      - name: neovim
      - name: deno
      - name: java
      - name: clojure/tools/clojure
      - name: rust
      - name: jq
    homebrew_cask_packages:
      # ブラウザ
      - name: google-chrome
      - name: firefox
      # エディタ
      - name: visual-studio-code
      # 開発環境
      - name: android-studio
      - name: chromedriver
      - name: docker
      - name: unity-hub
      - name: blender
      - name: processing
      - name: mamp
      - name: responsively
      - name: ngrok/ngrok/ngrok
      - name: flutter
      # 配信
      - name: obs
      - name: obs-virtualcam
      # コミュニケーション
      - name: zoom
      - name: messenger
      - name: slack
      - name: webex
      - name: discord
      # 常駐ツール
      - name: gyazo
      - name: notion
      - name: google-drive
      - name: todoist
      - name: deepl
      - name: toggl-track
      - name: grammarly
      # Office系ツール
      - name: chrome-remote-desktop-host
      # クリエイティブ系
      # ツール

  tasks:
    ##########
    # Homebrew
    ##########
    - name: homebrew update
      homebrew:
        update_homebrew: yes

    - name: homebrew tap
      homebrew_tap:
        name: '{{ item }}'
        state: present
      with_items: '{{ homebrew_taps }}'

    - name: homebrew packages install
      homebrew:
        name: '{{ item.name }}'
        state: '{{ item.state | default("present") }}'
      with_items: '{{ homebrew_packages }}'

    ####################
    # Download dotfiles
    ####################
    - name: git clone dotfiles
      ansible.builtin.git:
        repo: git@github.com:shinyaoguri/setup.git
        dest: '{{ ansible_env.HOME }}/setup'
    
    - name: fish-shell config symlinks
      file:
        src: '{{ ansible_env.HOME}}/setup/config.fish'
        dest: '{{ ansible_env.HOME}}/.config/fish/config.fish'
        state: link
        force: yes

    - name: neovim .config/nvim mkdir
      file:
        path: '{{ ansible_env.HOME }}/.config/nvim'
        state: directory

    - name: neovim init.vim symlinks
      file:
        src: '{{ ansible_env.HOME }}/setup/init.vim'
        dest: '{{ ansible_env.HOME }}/.config/nvim/init.vim'
        state: link
        force: yes

    ###############
    # Homebrew Cask
    ###############
    - name: homebrew cask packages install
      homebrew_cask: name={{ item.name }} state=installed
      environment:
        HOMEBREW_CASK_OPTS: "--appdir=/Applications"
      with_items: '{{ homebrew_cask_packages }}'

    ###################
    # Fish-Shell Setup
    ###################
    - name: fish-shell setup
      become: true
      lineinfile:
        path: /etc/shells
        regexp: '/opt/homebrew/bin/fish'
        insertafter: '/bin/zsh'
        line: '/opt/homebrew/bin/fish'
    - name: set fish-shell as default
      become: true
      user:
        name: "{{ ansible_user_id }}"
        shell: /opt/homebrew/bin/fish
    - name: fetch fisher
      uri:
        url: https://git.io/fisher
      register: fisher_installer
    - name: run fisher installer
      ansible.builtin.shell:
        cmd: source && fisher install jorgebucaran/fisher
        stdin: "{{ fisher_installer.content }}"

    # anyenv
    - name: anyenv setting
      file:
        path: '{{ ansible_env.HOME }}/.anyenv/plugins'
        state: directory
    - name: anyenv-update clone
      ansible.builtin.git:
        repo: https://github.com/znz/anyenv-update.git
        dest: '{{ ansible_env.HOME }}/.anyenv/plugins/anyenv-update'
